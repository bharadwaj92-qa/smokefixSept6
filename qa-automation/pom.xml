<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>AlereHealth</groupId>
    <artifactId>AlereHealthAutomation</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>

        <java.version>1.8</java.version>
        <propertyFileName>local</propertyFileName>
        <clientname>healthnet</clientname>
        <tagsToRun>@WBAGeneratedScenarios</tagsToRun>
        <tagsToIgnore>~@klm</tagsToIgnore>
        <threadCount>1</threadCount>

    </properties>



    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.2.2</version>
        </dependency>

        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>2.9.0</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>2.9.5</version>
        </dependency>


        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-jvm-deps</artifactId>
            <version>1.0.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-picocontainer</artifactId>
            <version>1.2.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-core</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.2.5</version>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-server</artifactId>
            <version>3.12.0</version>
        </dependency>

        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>11.2.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/ojdbc6-11.2.0.2.0.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>com.saucelabs</groupId>
            <artifactId>sauce_java_common</artifactId>
            <version>2.1.21</version>
        </dependency>

        <dependency>
            <groupId>com.saucelabs</groupId>
            <artifactId>sauce_junit</artifactId>
            <version>2.1.21</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.9</version>
        </dependency>



    </dependencies>

    <build>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>CleanUpTargetFolder</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                    <filesets>
                        <fileset>
                            <directory>target/</directory>
                            <followSymlinks>false</followSymlinks>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                
                <configuration>

                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArgument />
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>createCucumberReportDirs</id>
                        <phase>process-resources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${project.build.directory}/cucumber-parallel/json" />
                                <mkdir dir="${project.build.directory}/cucumber-parallel/html" />
                                <mkdir dir="${project.build.directory}/cucumber-parallel/junit" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20</version>
                <configuration>
                    <skip>false</skip>
                    <encoding>UTF-8</encoding>
                    <testFailureIgnore>true</testFailureIgnore>
                    <testSourceDirectory>${basedir}/src/test/java/</testSourceDirectory>
                    <testSourceDirectory>${basedir}/src/test/resources/</testSourceDirectory>
                    <testClassesDirectory>${project.build.directory}/test-classes/</testClassesDirectory>
                    <includes>
                        <include>**/Parallel*Runner.class</include>
                    </includes>
                    <perCoreThreadCount>false</perCoreThreadCount>
                    <parallel>classes</parallel>
                    <systemPropertyVariables>
                        <propertyFileName>local</propertyFileName>
                        <clientname>healthnet</clientname>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>

                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>		
            <plugin>
                <groupId>com.github.temyers</groupId>
                <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                <version>4.1.0</version>
                <executions>
                    <execution>
                        <id>generateRunners</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>generateRunners</goal>
                        </goals>
                        <configuration>
                            <!-- Mandatory -->
                            <!-- comma separated list of package names to scan for glue code -->
                            <glue>
                                <package>com.alerehealth.ui.stepdefenitions,com.alerehealth.fwk.common</package>
                                <package>com.alerehealth.fwk.common</package>
                            </glue>
                            <!-- These are optional, with the default values -->
                            <!-- Where to output the generated tests -->
                            <outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
                            <!-- The directory, which must be in the root of the runtime classpath,
                                containing your feature files. -->
                            <featuresDirectory>src/test/resources/ui/features</featuresDirectory>
                            <!-- featuresDirectory>src/test/resources/features</featuresDirectory -->
                            <!-- Directory where the cucumber report files shall be written -->
                            <!-- cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir -->
                            <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
                            <!-- List of cucumber plugins. When none are provided the json formatter
                                is used. For more advanced usage see section about configuring cucumber plugins -->
                            <plugins>
                                <plugin>
                                    <name>json</name>
                                    <outputDirectory>${project.build.directory}/cucumber-parallel/json</outputDirectory>
                                </plugin>
                                <plugin>
                                    <name>html</name>
                                    <outputDirectory>${project.build.directory}/cucumber-parallel/html</outputDirectory>
                                </plugin>
                                <plugin>
                                    <!--The available options are junit, testng, html, pretty, json,
                                        usage and rerun -->
                                    <name>junit</name>
                                    <!--Optional file extension. For build in cucumber plugins a sensible
                                        default is provided. -->
                                    <!--Optional output directory. Overrides cucumberOutputDirectory.
                                        Usefull when different plugins create files with the same extension -->
                                    <outputDirectory>${project.build.directory}/cucumber-parallel/junit</outputDirectory>
                                </plugin>
                            </plugins>
                            <!-- CucumberOptions.strict property -->
                            <strict>true</strict>
                            <!-- CucumberOptions.monochrome property -->
                            <monochrome>true</monochrome>
                            <!-- The tags to run, maps to CucumberOptions.tags property -->
                            <tags>
                                <tag>${tagsToRun}</tag>
                                <tag>${tagsToIgnore}</tag>

                            </tags>
                            <!-- If set to true, only feature files containing the required tags
                                shall be generated. -->

                            <!-- Generate TestNG runners instead of JUnit ones. -->
                            <useTestNG>false</useTestNG>
                            <!-- The naming scheme to use for the generated test classes. One
                                of 'simple' or 'feature-title' -->
                            <namingScheme>pattern</namingScheme>
                            <!-- The class naming pattern to use. Only required/used if naming
                                scheme is 'pattern'. -->
                            <namingPattern>Parallel{c}Runner</namingPattern>
                            <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per
                                scenario. FEATURE generates a runner per feature. -->
                            <parallelScheme>SCENARIO</parallelScheme>
                            <!-- Specify a custom template for the generated sources (this is
                                a path relative to the project base directory) -->
                            <customVmTemplate>src/main/resources/runnerTemplate.vm</customVmTemplate>
                            <!-- Specify a custom package name for generated sources. Default
                                is no package. -->
                            <packageName />
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            

        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                    only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>

                                        <groupId> com.github.temyers </groupId>
                                        <artifactId> cucumber-jvm-parallel-plugin </artifactId>

                                        <versionRange> [4.1.0,) </versionRange>
                                        <goals>
                                            <goal>generateRunners</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange> [1.3,) </versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>




</project>
